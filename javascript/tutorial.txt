Boas práticas na programação:

1) Documentação
/**
 * Descrição do código (o que faz?)
 * @author Nome do autor do código
 * @link https://...
 */

2) Código limpo
- Não abusar de comentários

3) Nomeação:
   - Não usar caracteres especiais, espaço e acentos
   - Nomes de arquivos, variáveis, funções devem ser    escritos com a primeira letra em caixa baixa (letra minúscula), iniciar com caixa alta (letra maiúscula) apenas classes modelos.
   - definir nomes que tenham relação com o problema a ser resolvido.

4) Alinhamento (identação do código)

5) Quanto menos código usado para o problema melhor!

 ________________________________________________
 Comandos de terminal:

 cls ou clear (limpar a tela do terminal)
 node -v  (exibe a versão do node)
 cd pasta (entrar na pasta)
 cd .. (voltar um nível)
 dir ou ls (listar os arquivos e diretórios)
 node arquivo.js (executar um arquivo JavaScript)
 seta para cima (repete os comandos)
 <tab> completa o comandos

_________________________________________________
VSCode: Dicas
Combinação de teclas <alt><shift><f> //alinhamento
produtividade infinita fork no github do professor para o meu


_________________________________________________
JavaScript:

Características:
- Sentenças e não linhas de código
- ; é opcional
console.clear() //limpar a tela do console
console.log() //escrever no console
// comentários de linhas
Podemos usar aspas " " ou ' '
Não podemos usar aspas diferentes " ' ou ' "
Dica: Usar em textos "aspas"
      Usar em bibliotecas ou caminhos 'apóstrofe'

_________________________________________________
Operadores:

Observações:
- Regra de precedência
- % (não calcula porcentagem e sim o resto da divisão)
Ex:
    |  3
 10 |______
  1    3

10 / 3  //3.33
10 % 3  //resultado é 1

Comparadores de igualdade:
NÃO USAR == !=

Operadores lógicos:
Dica:
professorjosedeassis.github.io/simulador

________________________________________________
Estudo das variáveis:
- String (caracteres)
- Numéricas (números)
- Booleanas (verdadeiro ou falso)

Tipagem Dinâmica:
no JavScript, o tipo string e definido qundo o conteudo da variavel estiver entre aspas ""
Variáveis numérica podem ser números inteiros e não inteiros
Obs: (virgula é um caractere e não número) se necessário converter a entrada de dados de "," para "."
.repleace(","  ".")

Na entrada de dados numérico via terminal ou formulários é necessário converter para números
classe number



Obs: No JS as variáveis são dinâmicamente tipadas
const (criar uma constante)
var ou let (criar uma variável)
ATENÇÃO!!! Não usar jamais o var

__________________________________________________
Git e GitHub
Material de apoio:
https://www.youtube.com/playlist?list=PLbEOwbQR9lqzK14I7OOeREEIE4k6rjgIj

Configurando o git
- Instalar o git
Abrir o git bash
git config --global user.name "seu nome"
git config --global user.email "seu email github"
git clone link do repositorio (vai clonar o repoitorio na maquina local)

digitar na raiz do repositório
git status (verifica o status local em relaçao ao github)
git add (adiciona todas alteraçoes)
git comit -m "descrição das alterações"

___________________________________________________________________________________________________
NODE - Plataforma para uso do JS fora do Browser (navegador)
|__ V8 (google chromium)
|__ bibliotecas C / c++
|__ pacotes npm (node packager manager)
npm ls (lista os pacotes)
npm i ou npm install (instala pacotes do npm)
npm r nome do arquivo (remove o pacote)

Pacote = Módulo = Bibliotecas 
Para usar um pacote é necessaio fazer a importação no início do código 

___________________________________________________________________________________________________
Algorítmo: "receita de bolo" 

Ex 1 : 
Objetivo: Calcular a média de duas notas 

             nota 1 + nota 2
média =    -------------------
                    2

Variáveis: nota1,nota2,media

Entrada: nota1,nota2
Processamento: media = (nota1 + nota2) / 2
Saída: media








